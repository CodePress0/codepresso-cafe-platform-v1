<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ include file="/WEB-INF/views/common/head.jspf" %>
<script src="https://js.tosspayments.com/v1/payment"></script>
<style>
    @import url('${pageContext.request.contextPath}/css/checkout.css');  ;
</style>
<body>
<%@ include file="/WEB-INF/views/common/header.jspf" %>

<main class="hero checkout-page">
    <div class="container">
        <!-- ÌéòÏù¥ÏßÄ Ìó§Îçî -->
        <div class="page-header">
            <button class="back-btn" onclick="history.back()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                    <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
            <h1 class="page-title">Í≤∞Ï†úÌïòÍ∏∞</h1>
        </div>

        <!-- ÏÑ†ÌÉùÎêú Îß§Ïû• Ï†ïÎ≥¥ Ï†ÑÎã¨Ïö© (Ïª®Ìä∏Î°§Îü¨ ÎπÑÏùòÏ°¥) -->
        <input type="hidden" id="selectedBranchIdInput" value="${branchId != null ? branchId : ''}" />
        <input type="hidden" id="selectedBranchNameInput" value="${branchName != null ? branchName : ''}" />

        <!-- Î©îÏù∏ Ïª®ÌÖêÏ∏† -->
        <div class="checkout-content">
        <!-- Ï¢åÏ∏°: Ï£ºÎ¨∏ Ï†ïÎ≥¥ -->
        <div class="left-section">
            <!-- Ï£ºÎ¨∏ÎÇ¥Ïó≠ -->
            <div class="order-section">
                <div class="section-header">
                    <h2 class="section-title">Ï£ºÎ¨∏ÎÇ¥Ïó≠ 
                        <c:choose>
                            <c:when test="${not empty directItems}">
                                (<span id="itemCount">${directItemsCount}</span>Í∞ú)
                            </c:when>
                            <c:when test="${not empty cartData and not empty cartData.items}">
                                (<span id="itemCount">${cartData.items.size()}</span>Í∞ú)
                            </c:when>
                            <c:otherwise>
                                (0Í∞ú)
                            </c:otherwise>
                        </c:choose>
                    </h2>
                    <button class="collapse-btn" id="collapseBtn">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                            <path d="M18 15L12 9L6 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                </div>

                <div class="order-items" id="orderItems">
                    <!-- ÏóêÎü¨ Î©îÏãúÏßÄ ÌëúÏãú -->
                    <c:if test="${not empty error}">
                        <div class="error-message" style="background: #f8d7da; color: #721c24; padding: 12px 16px; border-radius: 8px; margin-bottom: 16px;">
                             ${error}
                        </div>
                    </c:if>
                    
                    <!-- ÏßÅÏ†ëÏ£ºÎ¨∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ -->
                    <c:if test="${not empty directItems}">
                        <c:forEach var="d" items="${directItems}">
                            <div class="order-item">
                                <img src="${not empty d.productPhoto ? d.productPhoto : ''}"
                                     alt="${d.productName}" class="item-image">
                                <div class="item-details">
                                    <div class="item-name">${d.productName}</div>
                                    <div class="item-price">
                                        <fmt:formatNumber value="${d.unitPrice}" type="currency" currencySymbol="‚Ç©"/>
                                    </div>
                                    <div class="item-quantity">Ï¥ù ${d.quantity}Í∞ú</div>
                                    <c:if test="${not empty d.optionNames}">
                                        <div class="item-options" style="margin-top: 4px;">
                                            <ul class="order-option-list">
                                                <c:forEach var="on" items="${d.optionNames}">
                                                    <c:if test="${on != 'Í∏∞Î≥∏'}">
                                                        <li><span>${on}</span></li>
                                                    </c:if>
                                                </c:forEach>
                                            </ul>
                                        </div>
                                    </c:if>
                                </div>
                                <div class="item-total">
                                    <fmt:formatNumber value="${d.lineTotal}" type="currency" currencySymbol="‚Ç©"/>
                                </div>
                            </div>
                        </c:forEach>
                    </c:if>

                    <!-- Ïπ¥Ìä∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ -->
                    <c:if test="${not empty cartData and not empty cartData.items}">
                        <c:forEach var="item" items="${cartData.items}" varStatus="status">
                            <div class="order-item">
                                <img src="${not empty item.productPhoto ? item.productPhoto : ''}"
                                     alt="${item.productName}" class="item-image">
                                <div class="item-details">
                                    <div class="item-name">${item.productName}</div>
                                    <div class="item-price">
                                        <fmt:formatNumber value="${item.price}" type="currency" currencySymbol="‚Ç©"/>
                                    </div>
                                    <div class="item-quantity">Ï¥ù ${item.quantity}Í∞ú</div>
                                    <!-- ÏòµÏÖò ÌëúÏãú -->
                                    <c:if test="${not empty item.options}">
                                        <div class="item-options" style="margin-top: 4px;">
                                            <ul class="order-option-list">
                                                <c:forEach var="option" items="${item.options}">
                                                    <c:if test="${option.optionStyle != 'Í∏∞Î≥∏'}">
                                                        <li>
                                                            <span>${option.optionStyle}</span>
                                                            <c:if test="${option.extraPrice ne null && option.extraPrice ne 0}">
                                                                <em>+<fmt:formatNumber value="${option.extraPrice}" type="number" />Ïõê</em>
                                                            </c:if>
                                                        </li>
                                                    </c:if>
                                                </c:forEach>
                                            </ul>
                                        </div>
                                    </c:if>
                                </div>
                                <div class="item-total">
                                    <fmt:formatNumber value="${item.price}" type="currency" currencySymbol="‚Ç©"/>
                                </div>
                            </div>
                        </c:forEach>
                    </c:if>
                    
                    <!-- ÏïÑÎ¨¥ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÎäî Í≤ΩÏö∞ -->
                    <c:if test="${(empty directItems) and (empty cartData or empty cartData.items)}">
                        <div class="empty-cart" style="text-align: center; padding: 40px; color: var(--text-2);">
                            <h3>üõí Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§</h3>
                            <p>ÏÉÅÌíàÏùÑ Îã¥Í≥† Í≤∞Ï†úÎ•º ÏßÑÌñâÌï¥Ï£ºÏÑ∏Ïöî.</p>
                            <a href="/branch/list" class="btn btn-primary" style="margin-top: 16px;">ÏÉÅÌíà Î≥¥Îü¨Í∞ÄÍ∏∞</a>
                        </div>
                    </c:if>
                </div>
            </div>

            <!-- Îß§Ïû• Ï†ïÎ≥¥ -->
            <div class="store-section">
                <h2 class="section-title">
                    <span id="checkoutStoreName">
                        <c:choose>
                            <c:when test="${not empty branch}">${branch.branchName}</c:when>
                            <c:when test="${not empty branchName}">${branchName}</c:when>
                            <c:otherwise>Îß§Ïû• Ï†ïÎ≥¥ ÏóÜÏùå</c:otherwise>
                        </c:choose>
                    </span>
                </h2>
                <div class="store-info">
                    <div class="info-item">
                        <span class="info-label">ÏöîÏ≤≠ÏÇ¨Ìï≠</span>
                        <textarea class="request-input" id="requestNote" placeholder="ÏöîÏ≤≠ÏÇ¨Ìï≠ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" rows="2"></textarea>
                    </div>
                    <div class="info-item">
                        <span class="info-label">ÌîΩÏóÖ Î∞©Î≤ï</span>
                        <div class="order-type-options">
                            <label class="order-type-option">
                                <input type="radio" name="orderType" value="takeout" checked>
                                <span>ÌÖåÏù¥ÌÅ¨ÏïÑÏõÉ</span>
                            </label>
                            <label class="order-type-option">
                                <input type="radio" name="orderType" value="store">
                                <span>Îß§Ïû•</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- ÌîΩÏóÖ ÏòàÏ†ïÏãúÍ∞Ñ -->
            <div class="pickup-section">
                <h2 class="section-title">ÌîΩÏóÖ ÏòàÏ†ïÏãúÍ∞Ñ</h2>
                <div class="pickup-time">
                    <div class="time-options">
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="5" checked>
                            <span>5Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="10">
                            <span>10Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="15">
                            <span>15Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="20">
                            <span>20Î∂Ñ ÌõÑ</span>
                        </label>
                    </div>
                </div>
            </div>

            <!-- Í≤∞Ï†úÏàòÎã® -->
            <div class="payment-section">
                <h2 class="section-title">Í≤∞Ï†úÏàòÎã®</h2>
                <div class="payment-methods">
                    <label class="payment-method selected">
                        <input type="radio" name="payment" value="card" checked>
                        <div class="method-content">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <rect x="2" y="6" width="20" height="12" rx="2" stroke="currentColor" stroke-width="2"/>
                                <path d="M2 10H22" stroke="currentColor" stroke-width="2"/>
                            </svg>
                            <span>Ïã†Ïö©Ïπ¥Îìú</span>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Ìï†Ïù∏ Î∞è ÌòúÌÉù -->
            <div class="discount-section">
                <h2 class="section-title">Ìï†Ïù∏ Î∞è ÌòúÌÉù</h2>
                <div class="discount-options">
                    <c:choose>
                        <c:when test="${validCouponCount > 0}">
                            <!-- Ïø†Ìè∞Ïù¥ ÏûàÏùÑ Îïå - ÌôúÏÑ±Ìôî Î≤ÑÌäº -->
                            <label class="coupon-option">
                                <input type="checkbox" id="useCoupon" name="useCoupon">
                                <div class="coupon-content">
                                    <div class="coupon-info">
                                        <div class="coupon-icon">
                                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2"/>
                                                <path d="M9 12L11 14L15 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                        </div>
                                        <div class="coupon-details">
                                            <span class="coupon-name">Ìï†Ïù∏ Ïø†Ìè∞ ÏÇ¨Ïö© (Î≥¥Ïú† ${validCouponCount}Ïû•)</span>
                                            <span class="coupon-discount">2,000Ïõê Ìï†Ïù∏</span>
                                        </div>
                                    </div>
                                    <div class="coupon-checkbox">
                                        <div class="checkbox-custom"></div>
                                    </div>
                                </div>
                            </label>
                        </c:when>
                        <c:otherwise>
                            <!-- Ïø†Ìè∞Ïù¥ ÏóÜÏùÑ Îïå - ÎπÑÌôúÏÑ±ÌôîÎêú Î≤ÑÌäº -->
                            <label class="coupon-option disabled">
                                <input type="checkbox" id="useCoupon" name="useCoupon" disabled>
                                <div class="coupon-content">
                                    <div class="coupon-info">
                                        <div class="coupon-icon">
                                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2" opacity="0.5"/>
                                                <path d="M12 8V12M12 16H12.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" opacity="0.5"/>
                                            </svg>
                                        </div>
                                        <div class="coupon-details">
                                            <span class="coupon-name"> ÏÇ¨Ïö© Í∞ÄÎä•Ìïú Ïø†Ìè∞Ïù¥ ÏóÜÏäµÎãàÎã§</span>
                                            <span class="coupon-discount">2,000Ïõê Ìï†Ïù∏ </span>
                                        </div>
                                    </div>
                                </div>
                            </label>
                        </c:otherwise>
                    </c:choose>
                </div>
            </div>
        </div>


        <!-- Ïö∞Ï∏°: Í≤∞Ï†ú Ï†ïÎ≥¥ -->
        <div class="right-section">
            <!-- Í≤∞Ï†ú ÏöîÏïΩ -->
            <div class="payment-summary">
                <h2 class="section-title">Í≤∞Ï†úÏ†ïÎ≥¥</h2>
                <div class="summary-content">
                    <div class="summary-row">
                        <span>Îß§Ïû•</span>
                        <span id="checkoutBranchName">-</span>
                    </div>
                    <div class="summary-row">
                        <span>Ï£ºÎ¨∏ Í∏àÏï°</span>
                        <span id="orderAmount">
                            <c:if test="${not empty totalAmount}">
                                <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/>
                            </c:if>
                            <c:if test="${empty totalAmount}">
                                0Ïõê
                            </c:if>
                        </span>
                    </div>
                    <div class="summary-row">
                        <span>Ï¥ù ÏàòÎüâ</span>
                        <span>
                            <c:if test="${not empty totalQuantity}">
                                ${totalQuantity}Í∞ú
                            </c:if>
                            <c:if test="${empty totalQuantity}">
                                0Í∞ú
                            </c:if>
                        </span>
                    </div>
                    <div class="summary-row coupon-discount" id="couponRow" style="display: none;">
                        <span>Ïø†Ìè∞ Ìï†Ïù∏</span>
                        <span class="discount-amount">-2,000Ïõê</span>
                    </div>
                    <div class="summary-divider"></div>
                    <div class="summary-row total">
                        <span>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</span>
                        <span class="total-amount" id="totalAmount">
                            <c:if test="${not empty totalAmount}">
                                <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/>
                            </c:if>
                            <c:if test="${empty totalAmount}">
                                0Ïõê
                            </c:if>
                        </span>
                    </div>
                </div>

                <!-- Í≤∞Ï†ú Î≤ÑÌäº -->
                <div class="payment-actions">
                    <button class="btn-cancel" onclick="history.back()">Ï∑®ÏÜå</button>
                    <button class="btn-payment" id="paymentBtn" onclick="processTossPayment()">
                        <c:if test="${not empty totalAmount}">
                            <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/> Í≤∞Ï†úÌïòÍ∏∞
                        </c:if>
                        <c:if test="${empty totalAmount}">
                            0Ïõê Í≤∞Ï†úÌïòÍ∏∞
                        </c:if>
                    </button>
                </div>
            </div>
        </div>
    </div>
    </div>
</main>



<script>
    // ÏÑúÎ≤Ñ Ïû•Î∞îÍµ¨Îãà cartId ÌûåÌä∏ (ÏóÜÏúºÎ©¥ null Î†åÎçî)
    const __serverCartId = ${not empty cartData ? cartData.cartId : 'null'};
    // Ï£ºÎ¨∏ÎÇ¥Ïó≠ Ï†ëÍ∏∞/ÌéºÏπòÍ∏∞
    document.getElementById('collapseBtn').addEventListener('click', function() {
        const orderItems = document.getElementById('orderItems');
        const btn = this;

        if (orderItems.classList.contains('collapsed')) {
            orderItems.classList.remove('collapsed');
            btn.classList.remove('collapsed');
        } else {
            orderItems.classList.add('collapsed');
            btn.classList.add('collapsed');
        }
    });

    // Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù
    document.querySelectorAll('.payment-method').forEach(method => {
        method.addEventListener('click', function() {
            document.querySelectorAll('.payment-method').forEach(m => m.classList.remove('selected'));
            this.classList.add('selected');
            this.querySelector('input').checked = true;
        });
    });

    // Í≤∞Ï†ú ÏöîÏïΩ ÏóÖÎç∞Ïù¥Ìä∏
    function updatePaymentSummary() {
        const useCouponCheckbox = document.getElementById('useCoupon');
        const couponRow = document.getElementById('couponRow');
        const totalAmount = document.getElementById('totalAmount');
        const paymentBtn = document.getElementById('paymentBtn');
        
        // ÏõêÎûò Í∏àÏï°ÏùÑ JSPÏóêÏÑú Í∞ÄÏ†∏Ïò§Í±∞ÎÇò Í∏∞Î≥∏Í∞í ÏÇ¨Ïö©
        const originalAmount = ${totalAmount != null ? totalAmount : 8300};
        const discountAmount = 2000;
        
        if (useCouponCheckbox && useCouponCheckbox.checked) {
            // Ïø†Ìè∞ ÏÇ¨Ïö© Ïãú
            couponRow.style.display = 'flex';
            const finalAmount = originalAmount - discountAmount;
            totalAmount.textContent = finalAmount.toLocaleString() + 'Ïõê';
            paymentBtn.textContent = finalAmount.toLocaleString() + 'Ïõê Í≤∞Ï†úÌïòÍ∏∞';
        } else {
            // Ïø†Ìè∞ ÏÇ¨Ïö© ÏïàÌï®
            couponRow.style.display = 'none';
            totalAmount.textContent = originalAmount.toLocaleString() + 'Ïõê';
            paymentBtn.textContent = originalAmount.toLocaleString() + 'Ïõê Í≤∞Ï†úÌïòÍ∏∞';
        }
    }

    // ÌòÑÏû¨ Î°úÍ∑∏Ïù∏Ìïú ÏÇ¨Ïö©Ïûê ID Ï†ÄÏû• Î≥ÄÏàò
    let currentMemberId = null;

    // ÌòÑÏû¨ Î°úÍ∑∏Ïù∏ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå
    async function fetchCurrentUser() {
        try {
            const res = await fetch('/api/users/me', { credentials: 'same-origin' });
            if (!res.ok) return null;
            const data = await res.json();
            if (data && data.memberId) {
                currentMemberId = data.memberId;
                return currentMemberId;
            }
            return null;
        } catch (e) {
            console.log('ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå Ïã§Ìå®:', e);
            return null;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÎØ∏Î¶¨ Ï°∞Ìöå
        fetchCurrentUser();
    });

    // Î°úÏª¨ ÌÉÄÏûÑÏ°¥ Í∏∞Ï§Ä ISO Î¨∏ÏûêÏó¥(yyyy-MM-ddTHH:mm:ss) ÏÉùÏÑ± util (Z/Ïò§ÌîÑÏÖã Ï†úÍ±∞)
    function toLocalISOStringNoZ(date) {
        const t = new Date(date.getTime() - date.getTimezoneOffset() * 60000);
        return t.toISOString().slice(0, 19);
    }

    // ÌÜ†Ïä§ ÌéòÏù¥Î®ºÏ∏† Í≤∞Ï†úÏ≤òÎ¶¨
    async function processTossPayment(){
        // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÌôïÏù∏
        if (!currentMemberId) {
            await fetchCurrentUser();
        }
        if (!currentMemberId) {
            alert('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§. Î°úÍ∑∏Ïù∏ ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
            window.location.href='/login';
            return;
        }

        // Îß§Ïû• ÏÑ†ÌÉù ÌôïÏù∏ (Í∏∞Ï°¥ ÏΩîÎìúÏôÄ ÎèôÏùºÌïú Î∞©Ïãù ÏÇ¨Ïö©)
        const branchId = (function() {
            try {
                const selected = window.branchSelection && window.branchSelection.load
                    ? window.branchSelection.load()
                    : null;
                return selected && selected.id ? parseInt(selected.id) : null;
            } catch(e) { return null; }
        })();

        if (!branchId) {
            alert('Îß§Ïû•ÏùÑ Î®ºÏ†Ä ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
            return;
        }

        // finalAmount Í≥ÑÏÇ∞ (Ïø†Ìè∞ Ï†ÅÏö© Ìè¨Ìï®)
        const useCouponCheckbox = document.getElementById('useCoupon');
        let finalAmount = ${totalAmount != null ? totalAmount : 0};

        if (useCouponCheckbox && useCouponCheckbox.checked) {
            finalAmount = finalAmount - 2000;
        }

        // Ï£ºÎ¨∏ Îç∞Ïù¥ÌÑ∞ Íµ¨ÏÑ± (Í∏∞Ï°¥ processPayment Ìï®ÏàòÏôÄ ÎèôÏùºÌïú Î∞©Ïãù)
        const selectedOrderType = document.querySelector('input[name="orderType"]:checked');
        const selectedPickupTime = document.querySelector('input[name="pickupTime"]:checked');
        const requestNote = document.getElementById('requestNote').value;

        // ÌîΩÏóÖ ÏãúÍ∞Ñ Í≥ÑÏÇ∞
        const now = new Date();
        const pickupTime = new Date(now.getTime() + (parseInt(selectedPickupTime.value) * 60 * 1000));
        const pickupTimeLocal = toLocalISOStringNoZ(pickupTime);

        // Ï£ºÎ¨∏ ÏïÑÏù¥ÌÖú Íµ¨ÏÑ± (Í∏∞Ï°¥ Î°úÏßÅ Í∑∏ÎåÄÎ°ú ÏÇ¨Ïö©)
        let orderItems = [];
        if (${not empty directItems}) {
            <c:forEach var="d" items="${directItems}">
            orderItems.push({
                productId: ${d.productId},
                quantity: ${d.quantity},
                price: ${d.unitPrice},
                optionIds: [<c:forEach var="oid" items="${d.optionIds}" varStatus="s">${oid}<c:if test="${!s.last}">,</c:if></c:forEach>]
            });
            </c:forEach>
        } else if (${not empty cartData and not empty cartData.items}) {
            <c:forEach var="item" items="${cartData.items}">
            orderItems.push({
                productId: ${item.productId},
                quantity: ${item.quantity},
                price: Math.round(${item.price} / ${item.quantity}),
                optionIds: [<c:forEach var="option" items="${item.options}" varStatus="status">${option.optionId}<c:if test="${!status.last}">,</c:if></c:forEach>]
            });
            </c:forEach>
        }

        const orderData = {
            memberId: currentMemberId,
            branchId: branchId,  // ‚Üê ÏàòÏ†ïÎêú Î∂ÄÎ∂Ñ
            isTakeout: selectedOrderType.value === 'takeout',
            pickupTime: pickupTimeLocal,
            requestNote: requestNote,
            isFromCart: ${isFromCart == true ? 'true' : 'false'},
            orderItems: orderItems,
            // Ïø†Ìè∞ Ï†ïÎ≥¥ÎèÑ Ï∂îÍ∞Ä
            usedCouponId: selectedCoupon ? selectedCoupon.couponId : null,
            couponDiscountAmount: selectedCoupon ? selectedCoupon.discountAmount : null
        };


        // 1. Ï£ºÎ¨∏ ÏÉùÏÑ±
        const orderResponse = await fetch('/api/payments/checkout', {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(orderData)
        });

        const orderResult = await orderResponse.json();

        console.log('TossPayments:', typeof TossPayments);
        console.log('clientKey', '${clientKey}')

        // SDK Î°úÎìú ÌôïÏù∏
        if (typeof TossPayments === 'undefined') {
            alert('ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏† SDKÍ∞Ä Î°úÎìúÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
            return;
        }

        try {
            // 2. ÌÜ†Ïä§ Í≤∞Ï†úÏ∞ΩÏúºÎ°ú Ïù¥Îèô (v1 Î∞©Ïãù)
            const tossPayments = TossPayments('${clientKey}');
            console.log('TossPayments v1 initialized:', tossPayments);

            // Toss Í∑úÍ≤©Ïóê ÎßûÏ∂∞ orderId Î≥¥Ï†ï (ÏòÅ/Ïà´Ïûê/_- Îßå, 6~64Ïûê)
            const rawOrderId = orderResult.orderId;
            let tossOrderId = String(rawOrderId).replace(/[^A-Za-z0-9_-]/g, '');
            if (tossOrderId.length < 6) tossOrderId = tossOrderId.padStart(6, '0');
            if (tossOrderId.length > 64) tossOrderId = tossOrderId.slice(0, 64);

            // v1 Î∞©ÏãùÏúºÎ°ú Í≤∞Ï†ú ÏöîÏ≤≠
            tossPayments.requestPayment('Ïπ¥Îìú', {
                amount: finalAmount,
                orderId: tossOrderId,
                orderName: 'CodePresso Ï£ºÎ¨∏',
                successUrl: 'http://localhost:8080/payments/success',
                failUrl: 'http://localhost:8080/payments/fail',
                customerEmail: 'customer@example.com',
                customerName: 'Í≥†Í∞ùÎ™Ö'
            });
            
        } catch (error) {
            console.error('ÌÜ†Ïä§ Í≤∞Ï†ú Ïò§Î•ò:', error);
            alert('Í≤∞Ï†ú Ï≤òÎ¶¨ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + error.message);
        }

    }

    // ÏÇ¨Ïö©Í∞ÄÎä•Ìïú Ïø†Ìè∞ Î™©Î°ù Ï°∞Ìöå
    async function fetchAvailableCoupons(memberId){
        try{
            const response = await fetch(`/api/coupons/me`);
            if(!response.ok) throw new Error('Ïø†Ìè∞ Ï°∞Ìöå Ïã§Ìå®');
            return await response.json();
        }catch (error){
            console.error('Ïø†Ìè∞ Ï°∞Ìöå Ïò§Î•ò:',error);
            return [];
        }
    }

    // ÌòÑÏû¨ Ïø†Ìè∞ ÏÑ†ÌÉù ÏÉÅÌÉúÎ•º Ï†ÄÏû•Ìï† Î≥ÄÏàò
    let selectedCoupon = null;

    const useCouponCheckbox = document.getElementById('useCoupon');
    if(useCouponCheckbox){
        useCouponCheckbox.addEventListener('change',async function (){
            if(this.checked){
                // Ïã§Ï†ú Ïø†Ìè∞ Î™©Î°ù Ï°∞Ìöå
                const coupons = await fetchAvailableCoupons();
                if(coupons.length > 0) {
                    selectedCoupon = {
                        couponId: coupons[0].couponId,
                        discountAmount: coupons[0].discountAmount
                    };
                }
            }else {
                selectedCoupon = null;
            }
            updatePaymentSummary();
            });
    }
</script>

<!-- Í≤∞Ï†ú ÌéòÏù¥ÏßÄ: ÏÑ†ÌÉù Îß§Ïû•Î™Ö ÌïòÏù¥ÎìúÎ†àÏù¥ÏÖò (Ïª®Ìä∏Î°§Îü¨ ÎπÑÏùòÏ°¥) -->
<script>
  (function(){
    var nameTarget = document.getElementById('checkoutBranchName');
    var storeTitleTarget = document.getElementById('checkoutStoreName');
    var idInput = document.getElementById('selectedBranchIdInput');
    var nameInput = document.getElementById('selectedBranchNameInput');

    function setName(name){
      var display = name && String(name).trim() ? String(name).trim() : '-';
      if (nameTarget) nameTarget.textContent = display;
      if (storeTitleTarget) storeTitleTarget.textContent = display === '-' ? 'Îß§Ïû• Ï†ïÎ≥¥ ÏóÜÏùå' : display;
      if (nameInput) nameInput.value = name ? String(name).trim() : '';
    }

    function hydrate(){
      var id = idInput && idInput.value ? String(idInput.value).trim() : '';
      var nm = nameInput && nameInput.value ? String(nameInput.value).trim() : '';
      if (nm) { setName(nm); return; }
      if (id) {
        setName('Îß§Ïû• Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...');
        fetch('/branch/info/' + encodeURIComponent(id))
          .then(function(r){ if(!r.ok) throw 0; return r.json(); })
          .then(function(d){ setName(d && (d.name || d.branchName) ? (d.name || d.branchName) : ('ID ' + id)); })
          .catch(function(){ setName('Îß§Ïû• Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§'); });
        return;
      }
      try {
        var sel = (window.branchSelection && typeof window.branchSelection.load === 'function') ? window.branchSelection.load() : null;
        setName(sel && sel.name ? sel.name : '');
      } catch(e) {
        setName('');
      }
    }

    document.addEventListener('DOMContentLoaded', hydrate);
  })();
</script>

<%@ include file="/WEB-INF/views/common/footer.jspf" %>
