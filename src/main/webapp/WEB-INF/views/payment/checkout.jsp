<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ include file="/WEB-INF/views/common/head.jspf" %>
<body>
<%@ include file="/WEB-INF/views/common/header.jspf" %>

<main class="hero checkout-page">
    <div class="container">
        <!-- ÌéòÏù¥ÏßÄ Ìó§Îçî -->
        <div class="page-header">
            <button class="back-btn" onclick="history.back()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                    <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
            <h1 class="page-title">Í≤∞Ï†úÌïòÍ∏∞</h1>
        </div>

        <!-- ÏÑ†ÌÉùÎêú Îß§Ïû• Ï†ïÎ≥¥ Ï†ÑÎã¨Ïö© (Ïª®Ìä∏Î°§Îü¨ ÎπÑÏùòÏ°¥) -->
        <input type="hidden" id="selectedBranchIdInput" value="${branchId != null ? branchId : ''}" />
        <input type="hidden" id="selectedBranchNameInput" value="${branchName != null ? branchName : ''}" />

        <!-- Î©îÏù∏ Ïª®ÌÖêÏ∏† -->
        <div class="checkout-content">
        <!-- Ï¢åÏ∏°: Ï£ºÎ¨∏ Ï†ïÎ≥¥ -->
        <div class="left-section">
            <!-- Ï£ºÎ¨∏ÎÇ¥Ïó≠ -->
            <div class="order-section">
                <div class="section-header">
                    <h2 class="section-title">Ï£ºÎ¨∏ÎÇ¥Ïó≠ 
                        <c:choose>
                            <c:when test="${not empty directItems}">
                                (<span id="itemCount">${directItemsCount}</span>Í∞ú)
                            </c:when>
                            <c:when test="${not empty cartData and not empty cartData.items}">
                                (<span id="itemCount">${cartData.items.size()}</span>Í∞ú)
                            </c:when>
                            <c:otherwise>
                                (0Í∞ú)
                            </c:otherwise>
                        </c:choose>
                    </h2>
                    <button class="collapse-btn" id="collapseBtn">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                            <path d="M18 15L12 9L6 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </button>
                </div>

                <div class="order-items" id="orderItems">
                    <!-- ÏóêÎü¨ Î©îÏãúÏßÄ ÌëúÏãú -->
                    <c:if test="${not empty error}">
                        <div class="error-message" style="background: #f8d7da; color: #721c24; padding: 12px 16px; border-radius: 8px; margin-bottom: 16px;">
                             ${error}
                        </div>
                    </c:if>
                    
                    <!-- ÏßÅÏ†ëÏ£ºÎ¨∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ -->
                    <c:if test="${not empty directItems}">
                        <c:forEach var="d" items="${directItems}">
                            <div class="order-item">
                                <img src="${not empty d.productPhoto ? d.productPhoto : ''}"
                                     alt="${d.productName}" class="item-image">
                                <div class="item-details">
                                    <div class="item-name">${d.productName}</div>
                                    <div class="item-price">
                                        <fmt:formatNumber value="${d.unitPrice}" type="currency" currencySymbol="‚Ç©"/>
                                    </div>
                                    <div class="item-quantity">Ï¥ù ${d.quantity}Í∞ú</div>
                                    <c:if test="${not empty d.optionNames}">
                                        <div class="item-options" style="margin-top: 4px;">
                                            <ul class="order-option-list">
                                                <c:forEach var="on" items="${d.optionNames}">
                                                    <c:if test="${on != 'Í∏∞Î≥∏'}">
                                                        <li><span>${on}</span></li>
                                                    </c:if>
                                                </c:forEach>
                                            </ul>
                                        </div>
                                    </c:if>
                                </div>
                                <div class="item-total">
                                    <fmt:formatNumber value="${d.lineTotal}" type="currency" currencySymbol="‚Ç©"/>
                                </div>
                            </div>
                        </c:forEach>
                    </c:if>

                    <!-- Ïπ¥Ìä∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ -->
                    <c:if test="${not empty cartData and not empty cartData.items}">
                        <c:forEach var="item" items="${cartData.items}" varStatus="status">
                            <div class="order-item">
                                <img src="${not empty item.productPhoto ? item.productPhoto : ''}"
                                     alt="${item.productName}" class="item-image">
                                <div class="item-details">
                                    <div class="item-name">${item.productName}</div>
                                    <div class="item-price">
                                        <fmt:formatNumber value="${item.price}" type="currency" currencySymbol="‚Ç©"/>
                                    </div>
                                    <div class="item-quantity">Ï¥ù ${item.quantity}Í∞ú</div>
                                    <!-- ÏòµÏÖò ÌëúÏãú -->
                                    <c:if test="${not empty item.options}">
                                        <div class="item-options" style="margin-top: 4px;">
                                            <ul class="order-option-list">
                                                <c:forEach var="option" items="${item.options}">
                                                    <c:if test="${option.optionStyle != 'Í∏∞Î≥∏'}">
                                                        <li>
                                                            <span>${option.optionStyle}</span>
                                                            <c:if test="${option.extraPrice ne null && option.extraPrice ne 0}">
                                                                <em>+<fmt:formatNumber value="${option.extraPrice}" type="number" />Ïõê</em>
                                                            </c:if>
                                                        </li>
                                                    </c:if>
                                                </c:forEach>
                                            </ul>
                                        </div>
                                    </c:if>
                                </div>
                                <div class="item-total">
                                    <fmt:formatNumber value="${item.price}" type="currency" currencySymbol="‚Ç©"/>
                                </div>
                            </div>
                        </c:forEach>
                    </c:if>
                    
                    <!-- ÏïÑÎ¨¥ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÎäî Í≤ΩÏö∞ -->
                    <c:if test="${(empty directItems) and (empty cartData or empty cartData.items)}">
                        <div class="empty-cart" style="text-align: center; padding: 40px; color: var(--text-2);">
                            <h3>üõí Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§</h3>
                            <p>ÏÉÅÌíàÏùÑ Îã¥Í≥† Í≤∞Ï†úÎ•º ÏßÑÌñâÌï¥Ï£ºÏÑ∏Ïöî.</p>
                            <a href="/branch/list" class="btn btn-primary" style="margin-top: 16px;">ÏÉÅÌíà Î≥¥Îü¨Í∞ÄÍ∏∞</a>
                        </div>
                    </c:if>
                </div>
            </div>

            <!-- Îß§Ïû• Ï†ïÎ≥¥ -->
            <div class="store-section">
                <h2 class="section-title">
                    <span id="checkoutStoreName">
                        <c:choose>
                            <c:when test="${not empty branch}">${branch.branchName}</c:when>
                            <c:when test="${not empty branchName}">${branchName}</c:when>
                            <c:otherwise>Îß§Ïû• Ï†ïÎ≥¥ ÏóÜÏùå</c:otherwise>
                        </c:choose>
                    </span>
                </h2>
                <div class="store-info">
                    <div class="info-item">
                        <span class="info-label">ÏöîÏ≤≠ÏÇ¨Ìï≠</span>
                        <textarea class="request-input" id="requestNote" placeholder="ÏöîÏ≤≠ÏÇ¨Ìï≠ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" rows="2"></textarea>
                    </div>
                    <div class="info-item">
                        <span class="info-label">ÌîΩÏóÖ Î∞©Î≤ï</span>
                        <div class="order-type-options">
                            <label class="order-type-option">
                                <input type="radio" name="orderType" value="takeout" checked>
                                <span>ÌÖåÏù¥ÌÅ¨ÏïÑÏõÉ</span>
                            </label>
                            <label class="order-type-option">
                                <input type="radio" name="orderType" value="store">
                                <span>Îß§Ïû•</span>
                            </label>
                        </div>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Ìè¨Ïû•Î∞©Î≤ï</span>
                        <div class="package-options">
                            <label class="package-option">
                                <input type="radio" name="package" value="none" checked>
                                <span>Ìè¨Ïû•ÏïàÌï®</span>
                            </label>
                            <label class="package-option">
                                <input type="radio" name="package" value="carrier">
                                <span>Ï†ÑÏ≤¥Ìè¨Ïû•(ÏºÄÎ¶¨Ïñ¥)</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- ÌîΩÏóÖ ÏòàÏ†ïÏãúÍ∞Ñ -->
            <div class="pickup-section">
                <h2 class="section-title">ÌîΩÏóÖ ÏòàÏ†ïÏãúÍ∞Ñ</h2>
                <div class="pickup-time">
                    <div class="time-options">
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="5" checked>
                            <span>5Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="10">
                            <span>10Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="15">
                            <span>15Î∂Ñ ÌõÑ</span>
                        </label>
                        <label class="time-option">
                            <input type="radio" name="pickupTime" value="20">
                            <span>20Î∂Ñ ÌõÑ</span>
                        </label>
                    </div>
                </div>
            </div>

            <!-- Í≤∞Ï†úÏàòÎã® -->
            <div class="payment-section">
                <h2 class="section-title">Í≤∞Ï†úÏàòÎã®</h2>
                <div class="payment-methods">
                    <label class="payment-method selected">
                        <input type="radio" name="payment" value="card" checked>
                        <div class="method-content">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                <rect x="2" y="6" width="20" height="12" rx="2" stroke="currentColor" stroke-width="2"/>
                                <path d="M2 10H22" stroke="currentColor" stroke-width="2"/>
                            </svg>
                            <span>Ïã†Ïö©Ïπ¥Îìú</span>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Ìï†Ïù∏ Î∞è ÌòúÌÉù -->
            <div class="discount-section">
                <h2 class="section-title">Ìï†Ïù∏ Î∞è ÌòúÌÉù</h2>
                <div class="discount-options">
                    <label class="coupon-option">
                        <input type="checkbox" id="useCoupon" name="useCoupon">
                        <div class="coupon-content">
                            <div class="coupon-info">
                                <div class="coupon-icon">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                                        <path d="M21 12C21 16.418 16.418 21 12 21C7.582 21 3 16.418 3 12C3 7.582 7.582 3 12 3C16.418 3 21 7.582 21 12Z" stroke="currentColor" stroke-width="2"/>
                                        <path d="M9 12L11 14L15 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </div>
                                <div class="coupon-details">
                                    <span class="coupon-name">Ìï†Ïù∏ Ïø†Ìè∞ ÏÇ¨Ïö©
                                        <c:if test="${not empty validCouponCount}">
                                            (Î≥¥Ïú† ${validCouponCount}Ïû•)
                                        </c:if>
                                    </span>
                                    <span class="coupon-discount">2,000Ïõê Ìï†Ïù∏</span>
                                </div>
                            </div>
                            <div class="coupon-checkbox">
                                <div class="checkbox-custom"></div>
                            </div>
                        </div>
                    </label>
                </div>
            </div>
        </div>

        <!-- Ïö∞Ï∏°: Í≤∞Ï†ú Ï†ïÎ≥¥ -->
        <div class="right-section">
            <!-- Í≤∞Ï†ú ÏöîÏïΩ -->
            <div class="payment-summary">
                <h2 class="section-title">Í≤∞Ï†úÏ†ïÎ≥¥</h2>
                <div class="summary-content">
                    <div class="summary-row">
                        <span>Îß§Ïû•</span>
                        <span id="checkoutBranchName">-</span>
                    </div>
                    <div class="summary-row">
                        <span>Ï£ºÎ¨∏ Í∏àÏï°</span>
                        <span id="orderAmount">
                            <c:if test="${not empty totalAmount}">
                                <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/>
                            </c:if>
                            <c:if test="${empty totalAmount}">
                                0Ïõê
                            </c:if>
                        </span>
                    </div>
                    <div class="summary-row">
                        <span>Ï¥ù ÏàòÎüâ</span>
                        <span>
                            <c:if test="${not empty totalQuantity}">
                                ${totalQuantity}Í∞ú
                            </c:if>
                            <c:if test="${empty totalQuantity}">
                                0Í∞ú
                            </c:if>
                        </span>
                    </div>
                    <div class="summary-row coupon-discount" id="couponRow" style="display: none;">
                        <span>Ïø†Ìè∞ Ìï†Ïù∏</span>
                        <span class="discount-amount">-2,000Ïõê</span>
                    </div>
                    <div class="summary-divider"></div>
                    <div class="summary-row total">
                        <span>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</span>
                        <span class="total-amount" id="totalAmount">
                            <c:if test="${not empty totalAmount}">
                                <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/>
                            </c:if>
                            <c:if test="${empty totalAmount}">
                                0Ïõê
                            </c:if>
                        </span>
                    </div>
                </div>

                <!-- Í≤∞Ï†ú Î≤ÑÌäº -->
                <div class="payment-actions">
                    <button class="btn-cancel" onclick="history.back()">Ï∑®ÏÜå</button>
                    <button class="btn-payment" id="paymentBtn" onclick="redirectToTossPayment()">
                        <c:if test="${not empty totalAmount}">
                            <fmt:formatNumber value="${totalAmount}" type="currency" currencySymbol="‚Ç©"/> Í≤∞Ï†úÌïòÍ∏∞
                        </c:if>
                        <c:if test="${empty totalAmount}">
                            0Ïõê Í≤∞Ï†úÌïòÍ∏∞
                        </c:if>
                    </button>
                </div>
            </div>
        </div>
    </div>
    </div>
</main>

<style>
    /* Checkout Page Specific Styles */
    .checkout-page {
        padding-top: 40px;
        padding-bottom: 40px;
    }

    .page-header {
        display: flex;
        align-items: center;
        margin-bottom: 32px;
        gap: 16px;
    }

    .back-btn {
        background: var(--white);
        border: 1px solid rgba(0,0,0,0.08);
        color: var(--text-2);
        cursor: pointer;
        padding: 12px;
        border-radius: 12px;
        transition: all 0.2s;
        box-shadow: var(--shadow);
    }

    .back-btn:hover {
        background-color: var(--pink-4);
        border-color: var(--pink-2);
        color: var(--pink-1);
    }

    .page-title {
        font-size: 32px;
        font-weight: 800;
        color: var(--text-1);
        margin: 0;
    }

    .checkout-content {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: 32px;
    }

    .left-section, .right-section {
        display: flex;
        flex-direction: column;
        gap: 24px;
    }

    .order-section, .store-section, .pickup-section, .payment-section, .discount-section, .payment-summary {
        background: var(--white);
        border-radius: 18px;
        padding: 24px;
        box-shadow: var(--shadow);
        border: 1px solid rgba(0,0,0,0.05);
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .section-title {
        font-size: 20px;
        font-weight: 700;
        color: var(--text-1);
        margin-bottom: 16px;
    }

    .collapse-btn {
        background: none;
        border: none;
        color: #666;
        cursor: pointer;
        padding: 4px;
        transition: transform 0.2s;
    }

    .collapse-btn.collapsed {
        transform: rotate(180deg);
    }

    .order-items {
        display: flex;
        flex-direction: column;
        gap: 16px;
    }

    .order-items.collapsed {
        display: none;
    }

    .order-item {
        display: flex;
        align-items: center;
        gap: 16px;
        padding: 20px;
        background: linear-gradient(135deg, var(--pink-4), rgba(255,255,255,0.8));
        border-radius: 14px;
        border: 1px solid rgba(255,122,162,0.1);
    }

    .item-image {
        width: 80px;
        height: 80px;
        border-radius: 8px;
        object-fit: cover;
    }

    .item-details {
        flex: 1;
    }

    .item-name {
        font-size: 16px;
        font-weight: 500;
        color: #333;
        margin-bottom: 4px;
    }

    .item-price {
        font-size: 14px;
        color: var(--pink-1);
        font-weight: 600;
        margin-bottom: 4px;
    }

    .item-quantity {
        font-size: 14px;
        color: #666;
    }

    .item-total {
        font-size: 18px;
        font-weight: 700;
        color: var(--pink-1);
    }

    .store-info {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .info-label {
        font-size: 14px;
        font-weight: 500;
        color: #333;
    }

    .request-input {
        padding: 12px;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        font-size: 14px;
        font-family: inherit;
        resize: vertical;
        min-height: 60px;
    }

    .request-input:focus {
        outline: none;
        border-color: #dc3545;
    }

    .order-type-options, .package-options {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 12px;
    }
    
    .time-options {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
    }

    .order-type-option, .package-option, .time-option {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 16px;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s;
        min-width: 100px;
        justify-content: center;
    }

    .order-type-option:has(input:checked),
    .package-option:has(input:checked),
    .time-option:has(input:checked) {
        border-color: var(--pink-1);
        background: linear-gradient(135deg, var(--pink-4), var(--white));
    }

    .order-type-option input,
    .package-option input,
    .time-option input {
        display: none;
    }

    .time-options {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 12px;
    }

    .payment-methods {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .payment-method {
        display: flex;
        align-items: center;
        padding: 16px;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .payment-method.selected {
        border-color: var(--pink-1);
        background: linear-gradient(135deg, var(--pink-4), var(--white));
    }

    .payment-method input {
        display: none;
    }

    .method-content {
        display: flex;
        align-items: center;
        gap: 12px;
        color: #333;
    }

    /* Ìï†Ïù∏ ÏÑπÏÖò Ïä§ÌÉÄÏùº */
    .discount-options {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .coupon-option {
        display: flex;
        align-items: center;
        padding: 16px;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s;
        background: var(--white);
    }

    .coupon-option:hover {
        border-color: var(--pink-2);
        background: linear-gradient(135deg, var(--pink-4), var(--white));
    }

    .coupon-option:has(input:checked) {
        border-color: var(--pink-1);
        background: linear-gradient(135deg, var(--pink-4), var(--white));
    }

    .coupon-option input {
        display: none;
    }

    .coupon-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }

    .coupon-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .coupon-icon {
        color: var(--pink-1);
    }

    .coupon-details {
        display: flex;
        flex-direction: column;
        gap: 2px;
    }

    .coupon-name {
        font-size: 14px;
        font-weight: 500;
        color: #333;
    }

    .coupon-discount {
        font-size: 13px;
        color: #28a745;
        font-weight: 600;
    }

    .coupon-checkbox {
        position: relative;
    }

    .checkbox-custom {
        width: 20px;
        height: 20px;
        border: 2px solid #ddd;
        border-radius: 4px;
        position: relative;
        transition: all 0.2s;
    }

    .coupon-option:has(input:checked) .checkbox-custom {
        background-color: var(--pink-1);
        border-color: var(--pink-1);
    }

    .coupon-option:has(input:checked) .checkbox-custom::after {
        content: '‚úì';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: white;
        font-size: 12px;
        font-weight: bold;
    }

    .summary-content {
        margin-bottom: 24px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        font-size: 14px;
    }

    .summary-row.total {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .summary-divider {
        height: 1px;
        background-color: #e9ecef;
        margin: 16px 0;
    }

    .total-amount {
        color: var(--pink-1);
        font-weight: 800;
    }

    .discount-amount {
        color: #28a745;
        font-weight: 600;
    }

    .coupon-discount {
        color: #28a745;
    }

    .payment-actions {
        display: flex;
        gap: 12px;
    }

    .btn-cancel, .btn-payment {
        padding: 14px 24px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-cancel {
        flex: 1;
        background-color: #f8f9fa;
        color: #666;
    }

    .btn-cancel:hover {
        background-color: #e9ecef;
    }

    .btn-payment {
        flex: 3;
        background: linear-gradient(135deg, var(--pink-1), var(--pink-2));
        color: var(--white);
        box-shadow: 0 8px 16px rgba(255, 122, 162, 0.35);
    }

    .btn-payment:hover {
        filter: brightness(1.02);
        transform: translateY(-1px);
    }

    .btn-payment:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }

    /* ÌÉúÎ∏îÎ¶ø Î∞òÏùëÌòï */
    @media (max-width: 1024px) {
        .checkout-content {
            grid-template-columns: 1fr;
            gap: 24px;
            padding: 24px 16px;
        }

        .right-section {
            position: sticky;
            bottom: 0;
            background-color: #fff;
            border-top: 1px solid #e9ecef;
            padding-top: 16px;
            margin: 0 -16px -24px;
            padding-left: 16px;
            padding-right: 16px;
        }
    }

    /* Î™®Î∞îÏùº Î∞òÏùëÌòï */
    @media (max-width: 768px) {
        .main-content {
            padding: 16px;
            gap: 16px;
        }

        .order-section, .store-section, .pickup-section, .payment-section, .discount-section, .payment-summary {
            padding: 16px;
        }

        .order-item {
            padding: 12px;
            gap: 12px;
        }

        .item-image {
            width: 60px;
            height: 60px;
        }

        .package-options {
            flex-direction: column;
        }

        .payment-actions {
            flex-direction: column;
        }
    }

    /* ÏòµÏÖò Î∞∞ÏßÄ Ïä§ÌÉÄÏùº (cart.jspÏôÄ ÎèôÏùº) */
    .order-option-list { 
        display: flex; 
        flex-wrap: wrap; 
        gap: 8px; 
        list-style: none; 
        margin: 4px 0 0 0; 
        padding: 0; 
    }
    .order-option-list li { 
        background: rgba(255,122,162,0.12); 
        padding: 6px 12px; 
        border-radius: 999px; 
        font-size: 13px; 
        color: var(--text-1);
    }
    .order-option-list em { 
        margin-left: 6px; 
        color: var(--pink-1); 
        font-style: normal; 
        font-weight: 600; 
    }
 </style>

 <c:if test="${not empty orderItemsPayloadJson}">
     <script id="orderItemsPayloadJson" type="application/json">${orderItemsPayloadJson}</script>
 </c:if>

<script>
    // ÏÑúÎ≤ÑÍ∞Ä direct Ï£ºÎ¨∏ payloadÎ•º ÎÇ¥Î†§Ï£ºÎäî Í≤ΩÏö∞, Ìï¥Îãπ JSONÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§.
    // ÏïàÏ†ÑÏùÑ ÏúÑÌï¥ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ direct Ìï®ÏàòÎäî no-opÎ°ú Îë°ÎãàÎã§.
    function getDirectOrderItem(){ return null; }
    function currencyText(n){ try { return Number(n||0).toLocaleString() + 'Ïõê'; } catch(e){ return '0Ïõê'; } }
    // ÏÑúÎ≤Ñ Ïû•Î∞îÍµ¨Îãà cartId ÌûåÌä∏ (ÏóÜÏúºÎ©¥ null Î†åÎçî)
    const __serverCartId = ${not empty cartData ? cartData.cartId : 'null'};
    // Ï£ºÎ¨∏ÎÇ¥Ïó≠ Ï†ëÍ∏∞/ÌéºÏπòÍ∏∞
    document.getElementById('collapseBtn').addEventListener('click', function() {
        const orderItems = document.getElementById('orderItems');
        const btn = this;

        if (orderItems.classList.contains('collapsed')) {
            orderItems.classList.remove('collapsed');
            btn.classList.remove('collapsed');
        } else {
            orderItems.classList.add('collapsed');
            btn.classList.add('collapsed');
        }
    });

    // Í≤∞Ï†úÏàòÎã® ÏÑ†ÌÉù
    document.querySelectorAll('.payment-method').forEach(method => {
        method.addEventListener('click', function() {
            document.querySelectorAll('.payment-method').forEach(m => m.classList.remove('selected'));
            this.classList.add('selected');
            this.querySelector('input').checked = true;
        });
    });



    // Ïø†Ìè∞ Ï≤¥ÌÅ¨Î∞ïÏä§ ÏßÅÏ†ë ÌÅ¥Î¶≠ Ïãú Ïù¥Î≤§Ìä∏ Î≤ÑÎ∏îÎßÅ Î∞©ÏßÄ
    document.querySelector('#useCoupon').addEventListener('click', function(e) {
        e.stopPropagation();
        updatePaymentSummary();
    });

    // Í≤∞Ï†ú ÏöîÏïΩ ÏóÖÎç∞Ïù¥Ìä∏
    function updatePaymentSummary() {
        const useCouponCheckbox = document.getElementById('useCoupon');
        const couponRow = document.getElementById('couponRow');
        const totalAmount = document.getElementById('totalAmount');
        const paymentBtn = document.getElementById('paymentBtn');
        
        // ÏõêÎûò Í∏àÏï°ÏùÑ JSPÏóêÏÑú Í∞ÄÏ†∏Ïò§Í±∞ÎÇò Í∏∞Î≥∏Í∞í ÏÇ¨Ïö©
        const originalAmount = ${totalAmount != null ? totalAmount : 8300};
        const discountAmount = 2000;
        
        if (useCouponCheckbox && useCouponCheckbox.checked) {
            // Ïø†Ìè∞ ÏÇ¨Ïö© Ïãú
            couponRow.style.display = 'flex';
            const finalAmount = originalAmount - discountAmount;
            totalAmount.textContent = finalAmount.toLocaleString() + 'Ïõê';
            paymentBtn.textContent = finalAmount.toLocaleString() + 'Ïõê Í≤∞Ï†úÌïòÍ∏∞';
        } else {
            // Ïø†Ìè∞ ÏÇ¨Ïö© ÏïàÌï®
            couponRow.style.display = 'none';
            totalAmount.textContent = originalAmount.toLocaleString() + 'Ïõê';
            paymentBtn.textContent = originalAmount.toLocaleString() + 'Ïõê Í≤∞Ï†úÌïòÍ∏∞';
        }
    }

    // ÌòÑÏû¨ Î°úÍ∑∏Ïù∏Ìïú ÏÇ¨Ïö©Ïûê ID Ï†ÄÏû• Î≥ÄÏàò
    let currentMemberId = null;

    // ÌòÑÏû¨ Î°úÍ∑∏Ïù∏ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå
    async function fetchCurrentUser() {
        try {
            const res = await fetch('/api/users/me', { credentials: 'same-origin' });
            if (!res.ok) return null;
            const data = await res.json();
            if (data && data.memberId) {
                currentMemberId = data.memberId;
                return currentMemberId;
            }
            return null;
        } catch (e) {
            console.log('ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå Ïã§Ìå®:', e);
            return null;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÎØ∏Î¶¨ Ï°∞Ìöå
        fetchCurrentUser();

        // (ÏÑúÎ≤Ñ Ï£ºÎèÑ direct Î™®Îìú) ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Î†åÎçîÎßÅ ÎπÑÌôúÏÑ±Ìôî
        const direct = null;
        if (direct) {
            const itemsEl = document.getElementById('orderItems');
            if (itemsEl) {
                const optionsHtml = (direct.optionNames && direct.optionNames.length) ? 
                    '<div class="item-options" style="margin-top: 4px;"><ul class="order-option-list">' + 
                    direct.optionNames.filter(opt => opt !== 'Í∏∞Î≥∏').map(opt => '<li><span>' + opt + '</span></li>').join('') + 
                    '</ul></div>' : '';
                const html = '\n'
                    + '<div class="order-item">'
                    +   '<img src="' + (direct.productPhoto || '') + '" alt="' + (direct.productName || '') + '" class="item-image">'
                    +   '<div class="item-details">'
                    +     '<div class="item-name">' + (direct.productName || '') + '</div>'
                    +     '<div class="item-price">' + currencyText(direct.unitPrice) + '</div>'
                    +     '<div class="item-quantity">Ï¥ù ' + direct.quantity + 'Í∞ú</div>'
                    +     optionsHtml
                    +   '</div>'
                    +   '<div class="item-total">' + currencyText(direct.unitPrice * direct.quantity) + '</div>'
                    + '</div>';
                itemsEl.innerHTML = html;
                const countEl = document.getElementById('itemCount');
                if (countEl) countEl.textContent = '1';
            }
            // ÏöîÏïΩ Í∞±Ïã†
            const orderAmountEl = document.getElementById('orderAmount');
            const totalQtyEl = document.getElementById('totalQty');
            const totalAmountEl = document.getElementById('totalAmount');
            const paymentBtn = document.getElementById('paymentBtn');
            const total = (direct.unitPrice || 0) * (direct.quantity || 1);
            if (orderAmountEl) orderAmountEl.textContent = currencyText(total);
            if (totalQtyEl) totalQtyEl.textContent = String(direct.quantity || 1) + 'Í∞ú';
            if (totalAmountEl) totalAmountEl.textContent = currencyText(total);
            if (paymentBtn) paymentBtn.textContent = currencyText(total) + ' Í≤∞Ï†úÌïòÍ∏∞';
            // Îπà Ïπ¥Ìä∏ Î©îÏãúÏßÄ Ï†úÍ±∞
            document.querySelectorAll('.empty-cart').forEach(n => n.remove());
        }
    });

    // ÏÑ∏ÏÖòÏä§ÌÜ†Î¶¨ÏßÄ Í∏∞Î∞ò 'Î∞îÎ°ú Ï£ºÎ¨∏ÌïòÍ∏∞' ÌïòÏù¥ÎìúÎ†àÏù¥ÏÖò Ï†úÍ±∞ (SSR payload ÏÇ¨Ïö©)

    // Î°úÏª¨ ÌÉÄÏûÑÏ°¥ Í∏∞Ï§Ä ISO Î¨∏ÏûêÏó¥(yyyy-MM-ddTHH:mm:ss) ÏÉùÏÑ± util (Z/Ïò§ÌîÑÏÖã Ï†úÍ±∞)
    function toLocalISOStringNoZ(date) {
        const t = new Date(date.getTime() - date.getTimezoneOffset() * 60000);
        return t.toISOString().slice(0, 19);
    }

    // Í≤∞Ï†ú Ï≤òÎ¶¨
    async function processPayment() {
        // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥Í∞Ä ÏóÜÏúºÎ©¥ ÌïúÎ≤à Îçî ÏãúÎèÑ
        if (!currentMemberId) {
            await fetchCurrentUser();
        }
        if (!currentMemberId) {
            alert('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§. Î°úÍ∑∏Ïù∏ ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
            try { window.location.href = '/login'; } catch (e) {}
            return;
        }
        const selectedPayment = document.querySelector('input[name="payment"]:checked');
        const selectedOrderType = document.querySelector('input[name="orderType"]:checked');
        const selectedPackage = document.querySelector('input[name="package"]:checked');
        const selectedPickupTime = document.querySelector('input[name="pickupTime"]:checked');
        const useCouponCheckbox = document.getElementById('useCoupon');
        const requestNote = document.getElementById('requestNote').value;

        if (!selectedPayment) {
            alert('Í≤∞Ï†úÏàòÎã®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
            return;
        }

        // ÌòÑÏû¨ ÏãúÍ∞ÑÏóê ÏÑ†ÌÉùÎêú Î∂Ñ Ï∂îÍ∞Ä (ÏÑúÎ≤Ñ LocalDateTimeÍ≥º Ï†ïÌôïÌûà ÏùºÏπòÌïòÎèÑÎ°ù Î°úÏª¨ ISO Î¨∏ÏûêÏó¥Î°ú Ï†ÑÏÜ°)
        const now = new Date();
        const pickupTime = new Date(now.getTime() + (parseInt(selectedPickupTime.value) * 60 * 1000));
        const pickupTimeLocal = toLocalISOStringNoZ(pickupTime);

        // Í∏àÏï° Í≥ÑÏÇ∞ÏùÄ ÏÑúÎ≤Ñ Ï†úÍ≥µ totalAmount ÏÇ¨Ïö©
        let originalAmount = ${totalAmount != null ? totalAmount : 0};
        const discountAmount = useCouponCheckbox && useCouponCheckbox.checked ? 2000 : 0;
        const finalAmount = originalAmount - discountAmount;

        // Ï£ºÎ¨∏ ÏïÑÏù¥ÌÖú Íµ¨ÏÑ±: ÏÑúÎ≤Ñ Ï†ÑÎã¨ Îç∞Ïù¥ÌÑ∞ Ïö∞ÏÑ† ÏÇ¨Ïö©
        let orderItems = [];
        
        // 1. ÏßÅÏ†ë Ï£ºÎ¨∏ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ (server payload)
        const payloadNode = document.getElementById('orderItemsPayloadJson');
        if (payloadNode && payloadNode.textContent.trim().length > 0) {
            try { orderItems = JSON.parse(payloadNode.textContent); } catch(e) { orderItems = []; }
        }
        // 2. Ïû•Î∞îÍµ¨Îãà Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÎäî Í≤ΩÏö∞ (server cartData)
        else if (${not empty cartData and not empty cartData.items}) {
            <c:forEach var="item" items="${cartData.items}">
                orderItems.push({
                    productId: ${item.productId},
                    quantity: ${item.quantity},
                    price: Math.round(${item.price} / ${item.quantity}),
                    <c:if test="${not empty item.options}">
                    optionIds: [<c:forEach var="option" items="${item.options}" varStatus="status">${option.optionId}<c:if test="${!status.last}">,</c:if></c:forEach>]
                    </c:if>
                    <c:if test="${empty item.options}">
                    optionIds: []
                    </c:if>
                });
            </c:forEach>
        }

        const paymentData = {
            memberId: currentMemberId,
            branchId: (function() {
                try {
                    const selected = window.branchSelection && window.branchSelection.load 
                        ? window.branchSelection.load() 
                        : null;
                    return selected && selected.id 
                        ? parseInt(selected.id) 
                        : ${not empty branch ? branch.id : 1};
                } catch(e) {
                    return ${not empty branch ? branch.id : 1};
                }
            })(),
            isTakeout: selectedOrderType.value === 'takeout',
            // LocalDateTimeÏúºÎ°ú Ï†ïÌôïÌûà Îß§ÌïëÎêòÎèÑÎ°ù Î°úÏª¨ ÏãúÍ∞Ñ Î¨∏ÏûêÏó¥ Ï†ÑÏÜ°
            pickupTime: pickupTimeLocal,
            requestNote: requestNote,
            pickupMethod: selectedPackage.value === 'carrier' ? 'Ï†ÑÏ≤¥Ìè¨Ïû•(ÏºÄÎ¶¨Ïñ¥)' : 'Ìè¨Ïû•ÏïàÌï®',
            // Îü∞ÌÉÄÏûÑÏóêÏÑú Í≤∞Ï†ï (payload Ï°¥Ïû¨ Ïãú direct)
            isFromCart: true,
            useCoupon: useCouponCheckbox ? useCouponCheckbox.checked : false,
            discountAmount: discountAmount,
            finalAmount: finalAmount,
            orderItems: orderItems
        };

        // Îü∞ÌÉÄÏûÑ Í∏∞Ï§Ä isFromCart Ïû¨ÌèâÍ∞Ä
        try {
            const p = document.getElementById('orderItemsPayloadJson');
            paymentData.isFromCart = !(p && p.textContent && p.textContent.trim().length > 0);
        } catch (_) { paymentData.isFromCart = true; }

        const payButton = document.querySelector('.btn-payment');
        payButton.textContent = 'Í≤∞Ï†ú Ï≤òÎ¶¨ Ï§ë...';
        payButton.disabled = true;

        fetch('/api/payments/checkout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(paymentData)
        })
            .then(response => response.json())
            .then(data => {
                if (data.orderId) {
                    alert('Í≤∞Ï†úÍ∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!');

                    // Î∞±ÏóîÎìúÏóêÏÑú Ïû•Î∞îÍµ¨ÎãàÎ•º ÎπÑÏõåÎèÑ, Î∏åÎùºÏö∞Ï†Ä Ï∫êÏãú/ÎèôÏãúÏÑ±ÏúºÎ°ú ÌôîÎ©¥Ïóê ÎÇ®ÏïÑ Î≥¥Ïùº Ïàò ÏûàÏùå
                    // Ïû•Î∞îÍµ¨Îãà Í∏∞Î∞ò Ï£ºÎ¨∏Ïù∏ Í≤ΩÏö∞ÏóêÎßå Ï∂îÍ∞ÄÎ°ú ÎπÑÏö∞Í∏∞ ÏãúÎèÑ (Îü∞ÌÉÄÏûÑ ÌåêÎã®)
                    (async () => {
                        try {
                            const p = document.getElementById('orderItemsPayloadJson');
                            const isFromCartRuntime = !(p && p.textContent && p.textContent.trim().length > 0);
                            if (!isFromCartRuntime) return; // direct Ï£ºÎ¨∏Ïù¥Î©¥ Ïä§ÌÇµ
                        } catch (_) { return; }
                        try {
                            // CSRF Î©îÌÉÄÏóêÏÑú ÌÜ†ÌÅ∞/Ìó§Îçî ÏùΩÍ∏∞
                            const csrfTokenMeta = document.querySelector('meta[name="_csrf"]');
                            const csrfHeaderMeta = document.querySelector('meta[name="_csrf_header"]');
                            const csrfHeaderName = csrfHeaderMeta ? csrfHeaderMeta.getAttribute('content') : null;
                            const csrfToken = csrfTokenMeta ? csrfTokenMeta.getAttribute('content') : null;

                            // Ïö∞ÏÑ† ÏÑúÎ≤ÑÍ∞Ä ÎÇ¥Î†§Ï§Ä cartIdÎ°ú ÎπÑÏö∞Í∏∞ ÏãúÎèÑ
                            let cleared = false;
                            if (typeof __serverCartId === 'number') {
                                try {
                                    await fetch('/users/cart/clear', {
                                        method: 'POST',
                                        credentials: 'include',
                                        headers: Object.assign({ 'Content-Type': 'application/x-www-form-urlencoded' },
                                            (csrfHeaderName && csrfToken) ? { [csrfHeaderName]: csrfToken } : {}),
                                        body: new URLSearchParams({ cartId: String(__serverCartId) }).toString()
                                    });
                                    cleared = true;
                                } catch (_) {}
                            }

                            // Ïã§Ìå® Ïãú Ïû•Î∞îÍµ¨Îãà Ï°∞Ìöå ÌõÑ cartIdÎ°ú ÎπÑÏö∞Í∏∞ (Î∞±ÏóÖ Í≤ΩÎ°ú)
                            if (!cleared) {
                                const res = await fetch('/users/cart', { credentials: 'include' });
                                if (res.ok) {
                                    const cartJson = await res.json();
                                    if (cartJson && cartJson.cartId) {
                                        await fetch('/users/cart/clear', {
                                            method: 'POST',
                                            credentials: 'include',
                                            headers: Object.assign({ 'Content-Type': 'application/x-www-form-urlencoded' },
                                                (csrfHeaderName && csrfToken) ? { [csrfHeaderName]: csrfToken } : {}),
                                            body: new URLSearchParams({ cartId: String(cartJson.cartId) }).toString()
                                        }).catch(() => {});
                                    }
                                }
                            }
                        } catch (e) { /* ÎÑ§Ìä∏ÏõåÌÅ¨/Í∂åÌïú Î¨∏Ï†úÎäî Î¨¥ÏãúÌïòÍ≥† Í≥ÑÏÜç ÏßÑÌñâ */ }
                    })();

                    // Ï∂îÍ∞Ä ÏÑ∏ÏÖòÏä§ÌÜ†Î¶¨ÏßÄ Ï†ÄÏû• ÏóÜÏù¥ ÏÉÅÏÑ∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
                    window.location.href = '/orders/' + data.orderId;
                } else {
                    throw new Error('Í≤∞Ï†ú ÏùëÎãµ Ïò§Î•ò');
                }
            })
            .catch(error => {
                console.error('Í≤∞Ï†ú Ïò§Î•ò:', error);
                alert('Í≤∞Ï†ú Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
                
                // Ïø†Ìè∞ ÏÇ¨Ïö© Ïó¨Î∂ÄÏóê Îî∞Îùº Î≤ÑÌäº ÌÖçÏä§Ìä∏ Î≥µÏõê
                const isUsingCoupon = useCouponCheckbox && useCouponCheckbox.checked;
                const amount = isUsingCoupon ? (originalAmount - 2000) : originalAmount;
                payButton.textContent = amount.toLocaleString() + 'Ïõê Í≤∞Ï†úÌïòÍ∏∞';
                payButton.disabled = false;
            });
    }
</script>

<!-- Í≤∞Ï†ú ÌéòÏù¥ÏßÄ: ÏÑ†ÌÉù Îß§Ïû•Î™Ö ÌïòÏù¥ÎìúÎ†àÏù¥ÏÖò (Ïª®Ìä∏Î°§Îü¨ ÎπÑÏùòÏ°¥) -->
<script>
  (function(){
    var nameTarget = document.getElementById('checkoutBranchName');
    var storeTitleTarget = document.getElementById('checkoutStoreName');
    var idInput = document.getElementById('selectedBranchIdInput');
    var nameInput = document.getElementById('selectedBranchNameInput');

    function setName(name){
      var display = name && String(name).trim() ? String(name).trim() : '-';
      if (nameTarget) nameTarget.textContent = display;
      if (storeTitleTarget) storeTitleTarget.textContent = display === '-' ? 'Îß§Ïû• Ï†ïÎ≥¥ ÏóÜÏùå' : display;
      if (nameInput) nameInput.value = name ? String(name).trim() : '';
    }

    function hydrate(){
      var id = idInput && idInput.value ? String(idInput.value).trim() : '';
      var nm = nameInput && nameInput.value ? String(nameInput.value).trim() : '';
      if (nm) { setName(nm); return; }
      if (id) {
        setName('Îß§Ïû• Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...');
        fetch('/branch/info/' + encodeURIComponent(id))
          .then(function(r){ if(!r.ok) throw 0; return r.json(); })
          .then(function(d){ setName(d && (d.name || d.branchName) ? (d.name || d.branchName) : ('ID ' + id)); })
          .catch(function(){ setName('Îß§Ïû• Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò§ÏßÄ Î™ªÌñàÏäµÎãàÎã§'); });
        return;
      }
      try {
        var sel = (window.branchSelection && typeof window.branchSelection.load === 'function') ? window.branchSelection.load() : null;
        setName(sel && sel.name ? sel.name : '');
      } catch(e) {
        setName('');
      }
    }

    document.addEventListener('DOMContentLoaded', hydrate);
  })();
</script>

<!-- ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏† Í≤∞Ï†ú ÌéòÏù¥ÏßÄÎ°ú Î¶¨Îã§Ïù¥Î†âÌä∏ -->
<script>
    function redirectToTossPayment() {
        // ÌôîÎ©¥Ïóê ÌëúÏãúÎêú ÏµúÏ¢Ö Í≤∞Ï†úÍ∏àÏï° Í∞ÄÏ†∏Ïò§Í∏∞
        const finalAmountElement = document.getElementById('totalAmount');
        let finalAmount = 0;
        
        if (finalAmountElement) {
            // "‚Ç©2,500.00" ÌòïÌÉúÏóêÏÑú Ïà´ÏûêÎßå Ï∂îÏ∂ú
            const amountText = finalAmountElement.textContent || finalAmountElement.innerText;
            const amountMatch = amountText.match(/[\d,]+/);
            if (amountMatch) {
                finalAmount = parseInt(amountMatch[0].replace(/,/g, ''));
            }
        }
        
        // ÎßåÏïΩ Í∏àÏï°ÏùÑ Í∞ÄÏ†∏Ïò§ÏßÄ Î™ªÌñàÎã§Î©¥ ÏÑúÎ≤Ñ Í∏àÏï°ÏóêÏÑú Ïø†Ìè∞ Ìï†Ïù∏ Í≥ÑÏÇ∞
        if (finalAmount === 0) {
            const useCouponCheckbox = document.getElementById('useCoupon');
            const originalAmount = ${totalAmount != null ? totalAmount : 0};
            const discountAmount = useCouponCheckbox && useCouponCheckbox.checked ? 2000 : 0;
            finalAmount = originalAmount - discountAmount;
        }
        
        console.log('ÏµúÏ¢Ö Í≤∞Ï†úÍ∏àÏï°:', finalAmount);
        
        // ÏÑ†ÌÉùÎêú Îß§Ïû• ID Í∞ÄÏ†∏Ïò§Í∏∞
        let branchId = 1; // Í∏∞Î≥∏Í∞í
        try {
            const selected = window.branchSelection && window.branchSelection.load 
                ? window.branchSelection.load() 
                : null;
            if (selected && selected.id) {
                branchId = parseInt(selected.id);
            } else {
                // ÏÑúÎ≤ÑÏóêÏÑú Ï†ÑÎã¨Îêú branchId ÏÇ¨Ïö©
                const branchIdInput = document.getElementById('selectedBranchIdInput');
                if (branchIdInput && branchIdInput.value) {
                    branchId = parseInt(branchIdInput.value);
                }
            }
        } catch(e) {
            console.log('Îß§Ïû• ÏÑ†ÌÉù Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§:', e);
            // ÏÑúÎ≤ÑÏóêÏÑú Ï†ÑÎã¨Îêú branchId ÏÇ¨Ïö©
            const branchIdInput = document.getElementById('selectedBranchIdInput');
            if (branchIdInput && branchIdInput.value) {
                branchId = parseInt(branchIdInput.value);
            }
        }
        
        console.log('checkout.jsp - window.branchSelectionÏóêÏÑú Í∞ÄÏ†∏Ïò® Îß§Ïû• ID:', branchId);
        console.log('checkout.jsp - ÏÑúÎ≤ÑÏóêÏÑú Î∞õÏùÄ branchId:', document.getElementById('selectedBranchIdInput')?.value);
        console.log('ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏†Î°ú Ï†ÑÎã¨Ìï† Îß§Ïû• ID:', branchId);
        
        // ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏† Í≤∞Ï†ú ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô (Í≤∞Ï†úÍ∏àÏï°Í≥º Îß§Ïû•ID Ìè¨Ìï®)
        window.location.href = '/payments/toss-checkout?amount=' + finalAmount + '&branchId=' + branchId;
    }
</script>

<%@ include file="/WEB-INF/views/common/footer.jspf" %>